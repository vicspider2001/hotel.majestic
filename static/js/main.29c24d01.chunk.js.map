{"version":3,"sources":["Component/Newheader.js","Component/Adlogin.js","Component/Admin/NewDashboard.js","Component/CheckInReport.js","Component/Reservation.js","Component/CashCollection.js","Component/RoomChart.js","Component/Routing.js","index.js"],"names":["Newheader","props","_this","Object","classCallCheck","this","_super","call","console","log","state","show","checkinData","vacantData","CheckOut","userdata","setState","localStorage","removeItem","window","location","reload","_this2","count","result","length","output","out","react_default","a","createElement","Fragment","className","react_router_dom","to","src","style","width","height","marginTop","marginBottom","alt","type","onClick","handleShow","getItem","logoutNow","Offcanvas","Body","CloseButton","variant","handleClose","history","push","_this3","fetch","concat","method","then","res","json","data","map","item","roomStatus","filter","Component","withRouter","Adlogin","handleChange","event","defineProperty","target","name","value","password","email","message","login","userdat","userMail","registerfirst","username","userphone","useremailAD","userpassword","msg","headers","accept","content-type","body","JSON","stringify","auth","token","alert","setItem","myTimer","setTimeout","x-access-token","e","_callee","Reg","regenerator_default","wrap","_context","prev","next","phone","stop","react_responsive_modal_esm","open","onClose","onCloseModallogin","center","autoComplete","require","placeholder","onChange","disabled","loginNow","closePage","registerNow","ChartJS","register","CategoryScale","LinearScale","BarElement","Title","Tooltip","occupancyChart","otherSales","guestDeposits","getRestaurantSales","getBarNow","NewDashboard","allOccupied","allVacant","allCorporate","allIndividual","allStaff","allComplimentary","allCheckout","TotalSales","POS","Cash","Transfer","Complimentary","Room","OtherTotalSales","OtherRoom","OtherComplimentary","OtherTransfer","OtherCash","OtherPOS","ReceptionSales","date","RestTotalSales","RestRoom","RestComplimentary","RestTransfer","RestCash","RestPOS","BarTotalSales","BarRoom","BarComplimentary","BarTransfer","BarCash","BarPOS","Gtotal","Blogin","labels","showRooms","showOthers","showRest","showInnerBar","datasets","backgroundColor","transDate","moment","format","Component_Adlogin","Component_Newheader","Button","handleRoomShow","react_number_format_es","thousandSeparator","displayType","handleOthersShow","handleRestShow","handleInnerBarShow","Card","parseInt","dist","options","responsive","plugins","title","display","text","handleRoomClose","Subtitle","Text","handleOthersClose","handleRestClose","handleInnerBarClose","resp","allPOS","reduce","totals","POSAmount","allCash","CashAmount","allTransfer","TransferAmount","allComp","CompDebit","allRoom","roomDebit","dailySales","dailySales2","dailySales3","dailySales4","setInterval","CheckInReport","occuppancyData","occuppancySearch","percentOcc","NumOccuppied","NumAllRms","AllRms","percentCalculated","checkinhandleChange","bind","assertThisInitialized","react_datepicker_min_default","selected","maxDate","addDays","Date","dropdownMode","dateFormat","placeholderText","searchDate","OccuppancyData","sort","b","roomNumbers","arrDt","arrivalDate","depDt","departureDate","key","_id","fname","lname","roomtypeName","roomRate","discounType","discountAmount","dailyRate","Spinner","animation","_this4","renderOccupancyData","print","_this5","occuppied","AllRooms","percOcc","parseFloat","toFixed","localizer","dateFnsLocalizer","parse","startOfWeek","getDay","locales","Reservation","events","Math","floor","random","allDay","start","end","room","rsvAmount","displayAllRoomNums","displayOccupiedRoomNums","printBTN","transactionDate","starthandleChange","endhandleChange","newtitle","marginLeft","react_big_calendar_esm","startAccessor","endAccessor","selectable","onSelectEvent","handleEventSelection","getAllbar","getAllRest","getAllOther","getAllDeposits","CashCollection","renderRoomSales","description","renderRestSales","renderBarSales","renderOtherSales","RoomDeposits","RoomTotal","depPOS","depCash","depTransfer","depRoom","BarSales","BarTotal","barPOS","barCash","barTransfer","barRoom","RestSales","RestTotal","restPOS","restCash","restTransfer","restRoom","othersTotal","otherPOS","otherCash","otherTransfer","otherRoom","POSCal","CashCal","TransferCal","RoomCal","poolPOS","poolCash","poolRoom","poolTransfer","startdate","endDate","thisDate","roomSales","lenght","restallPOS","restallCash","restallTransfer","restallRoom","restSales","barallPOS","barallCash","barallTransfer","barallRoom","barSales","othersallPOS","othersallCash","othersallTransfer","othersallRoom","OtherSales","functionSales","functionTotal","functionRoom","functionTransfer","functionCash","functionPOS","poolSales","PoolTotal","SpoolPOS","poolsCash","poolsTransfer","poolsRoom","Hotelname","Hoteladdress","Hotelphone","renderDate","cleanupfirst","findSalesReport","prefix","defaultDate","roomchartUrl","RoomChart","renderRoomchart","roomchart","guestrecord","response","axios","get","sent","Routing","react_router","exact","path","component","ReactDOM","render","Component_Routing","document","getElementById"],"mappings":"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","file":"static/js/main.29c24d01.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './Header.css';\r\nimport Offcanvas from 'react-bootstrap/Offcanvas';\r\nimport CloseButton from 'react-bootstrap/CloseButton';\r\nimport {withRouter} from 'react-router-dom';\r\n// import Adlogin from './Adlogin';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst checkinDataUrl = \"http://us3.localto.net:39344/getrmstatus\";\r\n\r\n\r\n\r\nclass Newheader extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        console.log(\">>> inside nanetConstructor\", props)\r\n        this.state={\r\n            show:false,\r\n            checkinData:'',\r\n            vacantData:'',\r\n            CheckOut:'',\r\n            userdata:''\r\n            \r\n        }\r\n    }\r\n\r\n    handleShow(){\r\n        this.setState({show:true})\r\n    }\r\n\r\n    handleClose(){\r\n        this.setState({show:false})\r\n    }\r\n\r\n    // handleLogout = () => {\r\n    //     this.setState({userdata:''})\r\n    //     localStorage.removeItem('userdata')\r\n    //     localStorage.removeItem('rtk')\r\n    //     this.setState({Blogin:true});\r\n    // }\r\n\r\n    logoutNow(){\r\n        localStorage.removeItem('rtk');\r\n        localStorage.removeItem('userdata');\r\n        window.location.reload();\r\n    }\r\n    \r\n    render(){\r\n        console.log(\">>>Inside RMrender\",this.state)\r\n        \r\n        var count=this.state.checkinData;\r\n        if (count!=='green'){\r\n            var result = count.length;\r\n        }\r\n        var vacant=this.state.vacantData;\r\n        var output = vacant.length;\r\n\r\n        var chkout=this.state.CheckOut;\r\n        var out = chkout.length;\r\n\r\n        return (\r\n            <>\r\n                <div className=\"headerbackgrd\">\r\n                    <span>\r\n                        <Link to=\"/\">\r\n                            <center><img src= \"https://i.ibb.co/m9fxh8R/Logo-40.jpg\" className=\"logo\" style={{width:\"100px\", height:\"100px\", marginTop:\"20px\",marginBottom:\"20px\"}} alt=\"logo\"/></center>\r\n                        </Link>\r\n                    </span>\r\n                    \r\n                    <span>\r\n                        \r\n                        <i type=\"button\" className=\"fa fa-bars size2\" onClick={()=>this.handleShow()}></i>\r\n                    \r\n                    </span>\r\n\r\n                    <span>\r\n                        <div>\r\n                            <span className=\"Ikem\">Hi {localStorage.getItem('userdata')}</span>\r\n                        </div>\r\n                    </span>\r\n\r\n                    <span>\r\n                        <div>\r\n                            <p type=\"button\" className=\"Adriel\" onClick={()=>this.logoutNow()}>logout</p>\r\n                        </div>\r\n                    </span>\r\n                   \r\n                </div>\r\n                <div className=\"headerbackgrd2\">\r\n                    <span>\r\n                        <center>\r\n                            <span className='fontopt1'>CheckIn</span> <button className=\"btn btn-danger reshape\">{result}</button>\r\n                               \r\n                        </center>\r\n                        \r\n                        \r\n                    </span>\r\n\r\n                    <span>\r\n                        <center>\r\n                        <span className='fontopt3'>CheckOut </span> <button className=\"btn btn-danger reshape\">{out}</button>\r\n                        </center>\r\n                                                \r\n                    </span>\r\n                    \r\n                    <span>\r\n                        <center>\r\n                        <span className='fontopt2'>Vacant </span> <button className=\"btn btn-danger reshape\">{output}</button>\r\n                        </center>\r\n                        \r\n                        \r\n                    </span>\r\n                    \r\n                </div>\r\n                \r\n                <Offcanvas show={this.state.show}>\r\n                    \r\n                    <div className=\"headerbackgrd3\">\r\n                        <Offcanvas.Body>\r\n                            <div className=\"bg-dark p-3 size3\">\r\n                                <CloseButton variant=\"white\" onClick={()=>this.handleClose()}/>\r\n                                \r\n                            </div>\r\n                            <div className=\"menu\">\r\n                                <center>\r\n                                    <p className=\"menulist\" type=\"button\" onClick={()=>{this.props.history.push('/');this.handleClose()}}>Dashboard</p>\r\n                                </center>\r\n                            </div>\r\n                            <div className=\"menu\">\r\n                                <center>\r\n                                    <p className=\"menulist\" type=\"button\" onClick={()=>{this.props.history.push('/RoomChart');this.handleClose()}}>Room Chart</p>\r\n                                </center>\r\n                            </div>\r\n                            <div className=\"menu\">\r\n                                <center>\r\n                                    <p className=\"menulist\" type=\"button\" onClick={()=>{this.props.history.push('/Reservation');this.handleClose()}}>Reservations</p>\r\n                                </center>\r\n                            </div>\r\n                            <div className=\"menu\">\r\n                                <center>\r\n                                    <p className=\"menulist\" type=\"button\" onClick={()=>{this.props.history.push('/Occupancy');this.handleClose()}}>Occupancy</p>\r\n                                </center>\r\n                            </div>\r\n                            <div className=\"menu\">\r\n                                <center>\r\n                                    <p className=\"menulist\" type=\"button\" onClick={()=>{this.props.history.push('/SalesReport');this.handleClose()}}>Daily Sales</p>\r\n                                </center>\r\n                            </div>\r\n                            \r\n                            \r\n                        </Offcanvas.Body>\r\n                    </div>\r\n                    \r\n                </Offcanvas>\r\n                \r\n                \r\n            \r\n            </>\r\n        )\r\n    }\r\n\r\n    componentDidMount(){\r\n        console.log (\">>> Inside RMdidMount\")\r\n        \r\n        fetch(`${checkinDataUrl}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            \r\n            this.setState({\r\n                checkinData:data.map(item => item.roomStatus).filter(item=> item !=='green'&& item !=='black')\r\n                \r\n            })\r\n            this.setState({\r\n                vacantData:data.map(item => item.roomStatus).filter(item=> item ==='green')\r\n                \r\n            })\r\n            this.setState({\r\n                CheckOut:data.map(item => item.roomStatus).filter(item=> item ==='black')\r\n                \r\n            })\r\n            \r\n            \r\n        })\r\n\r\n        \r\n      \r\n    }\r\n    \r\n    \r\n}\r\n\r\n\r\nexport default withRouter(Newheader);","import React, { Component } from 'react';\r\nimport 'react-responsive-modal/styles.css';\r\nimport './BarReport.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {Modal} from 'react-responsive-modal';\r\n\r\n\r\nconst loginUrl = \"http://us3.localto.net:39344/api/auth/login\";\r\nconst getUserData = \"http://us3.localto.net:39344/api/auth/userinfo\";\r\nconst postAdminUsers = \"http://us3.localto.net:39344/api/auth/register\";\r\n\r\n\r\n\r\n\r\nclass Adlogin extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        console.log(\">>> inside loginConstructor\", props)\r\n       this.state={\r\n            password:'',\r\n            email:'',\r\n            message:'',\r\n            login: true,\r\n            userdat:'',\r\n            userMail:'',\r\n            registerfirst: false,\r\n\r\n            username:'',\r\n            userphone:'',\r\n            useremailAD:'',\r\n            userpassword:''\r\n\r\n        }\r\n        \r\n    }\r\n\r\n    loginNow(){\r\n        try{\r\n            const msg = {\r\n                password:`${this.state.password}`,\r\n                email:`${this.state.email}`,\r\n                message:`${this.state.message}`,\r\n                \r\n            }\r\n            fetch(loginUrl,{\r\n                method:'POST',\r\n                headers:{\r\n                    'accept':'application/json',\r\n                    'content-type':'application/json'\r\n                },\r\n                body:JSON.stringify(msg)\r\n            })\r\n    \r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                if(data.auth ===  false){\r\n                    this.setState({message:data.token});\r\n                    alert(this.state.message)\r\n                }else{\r\n                    localStorage.setItem('rtk',data.token)\r\n                    \r\n                    this.myTimer = setTimeout(()=>{\r\n                        fetch(getUserData, {\r\n                            method: 'GET',\r\n                            headers:{\r\n                                'x-access-token':localStorage.getItem('rtk')\r\n                            }\r\n                        })\r\n                        .then((res) => res.json())\r\n                        .then((data) => {\r\n                            \r\n                            localStorage.setItem('userdata',data.name)\r\n                            this.setState({\r\n                                userMail: data.email\r\n                            })\r\n                            if(this.state.userMail==='admin@majesticgarden.com'){\r\n                                this.setState({\r\n                                    login:false,\r\n                                    registerfirst:true\r\n                                    \r\n                                })\r\n                                \r\n                                \r\n                            }\r\n                            else{\r\n                                this.setState({\r\n                                    login:false,\r\n                                    registerfirst:false\r\n                                                                    \r\n                                })\r\n                                window.location.reload();\r\n                            }\r\n                        })\r\n                        \r\n                    },1000)\r\n\r\n                    \r\n                    \r\n                }\r\n            })\r\n        }catch(e) {\r\n            console.log(e)\r\n        }\r\n        \r\n\r\n    }\r\n\r\n    async registerNow() {\r\n       \r\n        try {\r\n            const Reg = {\r\n                name: `${this.state.username}`,\r\n                phone: `${this.state.userphone}`,\r\n                email: `${this.state.useremailAD}`,\r\n                password: `${this.state.userpassword}`,\r\n               \r\n            }\r\n\r\n            fetch(postAdminUsers,{\r\n                method:'POST',\r\n                headers:{\r\n                    'accept':'application/json',\r\n                    'content-type':'application/json'\r\n                },\r\n                body:JSON.stringify(Reg)\r\n            })\r\n    \r\n            .then(this.setState({\r\n                login: true,\r\n                registerfirst:false\r\n            }))\r\n            \r\n        }catch(e) {\r\n            console.log(e)\r\n        }\r\n\r\n    }\r\n    \r\n    handleChange = (event) => {\r\n        this.setState({\r\n            [event.target.name]:event.target.value\r\n        })\r\n        \r\n    }\r\n\r\n    onCloseModallogin(){\r\n        this.setState({\r\n            login: false\r\n        })\r\n        \r\n    }\r\n\r\n    closePage(){\r\n        this.setState({\r\n            registerfirst: false\r\n        })\r\n    }\r\n\r\n    \r\n    render() {\r\n        console.log (\">>> Inside logindetails\", this.state)\r\n        return (\r\n            <>\r\n                \r\n                <Modal open={this.state.login} onClose={()=>this.onCloseModallogin()} center>\r\n                    \r\n                    <div>\r\n                        <div className=\"formdesign152\">\r\n                            <h6 className=\"mb-3\">Login First</h6>\r\n                            <div>\r\n                                <center>\r\n                                    \r\n                                    <input autoComplete=\"off\" className=\"form-control mb-3 formsize51\" name=\"email\" require placeholder=\"Input Email\" value={this.state.email} onChange={this.handleChange}/>\r\n                                    <input type=\"password\" autoComplete=\"off\" className=\"form-control mb-3 formsize51\" name=\"password\" require placeholder=\"Enter Password\" value={this.state.password} onChange={this.handleChange}/>\r\n                                    <button disabled={this.state.email===''} className=\"btn btn-warning formsize91\" onClick={()=>this.loginNow()}>Login</button>\r\n                                    \r\n                                </center>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    \r\n                </Modal>\r\n                \r\n                    \r\n                \r\n                <Modal open={this.state.registerfirst} onClose={()=>this.closePage} center>\r\n                    \r\n                        <div>\r\n                            <div className=\"formdesign152\">\r\n                                <h6 className=\"mb-3\">Register First</h6>\r\n                                <div>\r\n                                    <input autoComplete=\"off\" className=\"form-control mb-3 formsize51\" name=\"username\" require placeholder=\"Enter Name\" value={this.state.username} onChange={this.handleChange}/>\r\n                                    <input autoComplete=\"off\" className=\"form-control mb-3 formsize51\" name=\"userphone\" require placeholder=\"Enter Phone\" value={this.state.userphone} onChange={this.handleChange}/>\r\n                                    <input autoComplete=\"off\" className=\"form-control mb-3 formsize51\" name=\"useremailAD\" require placeholder=\"Enter Email\" value={this.state.useremailAD} onChange={this.handleChange}/>\r\n                                    <input type=\"password\" autoComplete=\"off\" className=\"form-control mb-3 formsize51\" name=\"userpassword\" require placeholder=\"Enter Password\" value={this.state.userpassword} onChange={this.handleChange}/>\r\n                                    <button disabled={this.state.useremailAD===''}className=\"btn btn-warning formsize91\" onClick={()=>this.registerNow()}>Register</button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    \r\n                </Modal>\r\n               \r\n            </>\r\n        );\r\n    }\r\n        \r\n    \r\n}\r\n\r\nexport default Adlogin;","import React,{Component} from 'react';\r\nimport './Dashboard.css';\r\nimport Card from 'react-bootstrap/Card';\r\nimport NumberFormat from 'react-number-format';\r\nimport {Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip,} from 'chart.js';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport Offcanvas from 'react-bootstrap/Offcanvas';\r\nimport CloseButton from 'react-bootstrap/CloseButton';\r\nimport moment from 'moment';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Newheader from '../Newheader';\r\nimport Adlogin from '../Adlogin';\r\n\r\n\r\nChartJS.register(\r\n    CategoryScale,\r\n    LinearScale,\r\n    BarElement,\r\n    Title,\r\n    Tooltip\r\n    \r\n);\r\n\r\n\r\n// Rooms Transactions Url //\r\nconst occupancyChart = \"http://us3.localto.net:39344/getrmstatus\";\r\nconst otherSales = \"http://us3.localto.net:39344/otherSalesPoints\";\r\nconst guestDeposits = \"http://us3.localto.net:39344/GetTmpRmDep\";\r\n\r\n\r\n// Restaurant Transactions Url //\r\nconst getRestaurantSales = \"http://us3.localto.net:39344/restaurantSales\"; \r\n\r\n// Bar Transactions Url //\r\nconst getBarNow = \"http://us3.localto.net:39344/barSales\"; \r\n\r\n// PoolBar Transactions Url //\r\n// const getPoolBarSales = \"http://us3.localto.net:39344/poolbarSales\"; \r\n\r\n\r\n//Active work date//\r\nconst getWorkDate = \"http://us3.localto.net:39344/getActive\";\r\n// const url = \"http://us3.localto.net:39344/api/auth/userinfo\";\r\n\r\n\r\n\r\n\r\nclass NewDashboard extends Component{\r\n\r\n    constructor(props){\r\n        super(props)\r\n        console.log(\">>>Inside Constructor\")\r\n\r\n        this.state = {\r\n           \r\n            allOccupied:'',\r\n            allVacant:'',\r\n            allCorporate:'',\r\n            allIndividual:'',\r\n            allStaff:'',\r\n            allComplimentary:'',\r\n            allCheckout:'',\r\n\r\n            \r\n            TotalSales:0,\r\n            POS:0,\r\n            Cash:0,\r\n            Transfer:0,\r\n            Complimentary:0,\r\n            Room:0,\r\n\r\n\r\n            OtherTotalSales:0,\r\n            OtherRoom:0,\r\n            OtherComplimentary:0,\r\n            OtherTransfer:0,\r\n            OtherCash:0,\r\n            OtherPOS:0,\r\n\r\n            ReceptionSales:0,\r\n           \r\n            date:'',\r\n\r\n            RestTotalSales:0,\r\n            RestRoom:0,\r\n            RestComplimentary:0,\r\n            RestTransfer:0,\r\n            RestCash:0,\r\n            RestPOS:0,\r\n           \r\n\r\n            BarTotalSales:0,\r\n            BarRoom:0,\r\n            BarComplimentary:0,\r\n            BarTransfer:0,\r\n            BarCash:0,\r\n            BarPOS:0,\r\n\r\n            Gtotal:0,\r\n           \r\n            Blogin:'',\r\n\r\n            labels:['Rooms','Others','Restaurant','Inner Bar'],\r\n\r\n            showRooms:false,\r\n            showOthers:false,\r\n            showRest:false,\r\n            showInnerBar:false\r\n\r\n\r\n        };\r\n\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({\r\n            [event.target.name]:event.target.value\r\n                       \r\n        })\r\n\r\n    }\r\n\r\n    handleRoomShow(){\r\n        this.setState({showRooms:true})\r\n    }\r\n\r\n    handleRoomClose(){\r\n        this.setState({showRooms:false})\r\n    }\r\n\r\n    handleOthersShow(){\r\n        this.setState({showOthers:true})\r\n    }\r\n\r\n    handleOthersClose(){\r\n        this.setState({showOthers:false})\r\n    }\r\n\r\n    handleRestShow(){\r\n        this.setState({showRest:true})\r\n    }\r\n\r\n    handleRestClose(){\r\n        this.setState({showRest:false})\r\n    }\r\n\r\n    \r\n    handleInnerBarClose(){\r\n        this.setState({showInnerBar:false})\r\n    }\r\n\r\n    handleInnerBarShow(){\r\n        this.setState({showInnerBar:true})\r\n    }\r\n\r\n\r\n    logout(){\r\n        localStorage.removeItem('rtk');\r\n        localStorage.removeItem('userdata');\r\n               \r\n    }\r\n\r\n        \r\n    render(){\r\n        console.log (\">>> Inside Render\", this.state)\r\n\r\n        var count=this.state.allOccupied;\r\n        if (count!=='green'){\r\n            var result = count.length;\r\n        }\r\n\r\n        var labels=this.state.labels;\r\n\r\n        const data = {\r\n            labels:labels,\r\n            datasets: [\r\n              {\r\n                \r\n                data: [this.state.TotalSales, this.state.OtherTotalSales, this.state.RestTotalSales,  this.state.BarTotalSales,],\r\n                backgroundColor: ['chartreuse', 'cornflowerblue', 'hotpink','lightseagreen',]\r\n              }\r\n            \r\n            ]\r\n        };\r\n    \r\n        const options = {\r\n            responsive: true,\r\n            plugins: {\r\n           \r\n              title: {\r\n                display: true,\r\n                text: 'Income Chart',\r\n              },\r\n              \r\n            },\r\n            \r\n        };\r\n\r\n        var transDate = moment(this.state.date).format('YYYY-DD-MMM');\r\n\r\n        if(localStorage.getItem('rtk')==null||localStorage.getItem('userdata')===null){\r\n            return(\r\n                <>\r\n                    <Adlogin/>\r\n                </>\r\n            )\r\n\r\n        }\r\n\r\n       \r\n        return(\r\n            <>\r\n                <Newheader/>\r\n                <div className=\"Dashbackground\">\r\n                    \r\n                    <div className=\"heading\">\r\n                        \r\n                        <h5 type=\"button\" onClick={()=>this.props.history.push('/AppMenu')}>Dashboard</h5>\r\n                        \r\n                        \r\n                        \r\n                    </div>\r\n                    \r\n                    <div className=\"miniDash\">\r\n                        <Button variant=\"Danger\" className=\"DashSheet1\" type=\"button\" onClick={()=>this.handleRoomShow()}>\r\n                            \r\n                            <p className=\"mobileText\">Rooms: <NumberFormat value={this.state.TotalSales}thousandSeparator={true}displayType={\"text\"}/></p>\r\n                           \r\n                            \r\n                        </Button>\r\n\r\n                        <Button variant=\"Danger\" className=\"DashSheet2\" type=\"button\" onClick={()=>this.handleOthersShow()}> \r\n                           \r\n                            <p className=\"mobileText\">Other Sales: <NumberFormat value={this.state.OtherTotalSales}thousandSeparator={true}displayType={\"text\"}/></p>\r\n                            \r\n                            \r\n                        </Button>\r\n\r\n                        <Button variant=\"Danger\" className=\"DashSheet3\" type=\"button\" onClick={()=>this.handleRestShow()}> \r\n                            \r\n                            <p className=\"mobileText\">Restaurant: <NumberFormat value={this.state.RestTotalSales}thousandSeparator={true}displayType={\"text\"}/></p>\r\n                            \r\n                        \r\n                        </Button>\r\n\r\n                        <Button variant=\"Danger\" className=\"DashSheet4\" type=\"button\" onClick={()=>this.handleInnerBarShow()}>\r\n                           \r\n                            <p className=\"mobileText\">Bar: <NumberFormat value={this.state.BarTotalSales}thousandSeparator={true}displayType={\"text\"}/></p>\r\n                           \r\n                            \r\n                        </Button>\r\n                        {/* <Button variant=\"Danger\" className=\"DashSheet5\" type=\"button\" onClick={()=>this.handlePoolShow()}> \r\n                           \r\n                            <p className=\"mobileText\">Pool Bar: <NumberFormat value={this.state.PoolTotalSales}thousandSeparator={true}displayType={\"text\"}/></p>\r\n                           \r\n                            \r\n                        </Button> */}\r\n\r\n                        <Button variant=\"Danger\" className=\"DashSheet6\"> \r\n                            <Card.Title>\r\n                                <p className=\"mobileText\">Total: <NumberFormat value={parseInt(this.state.BarTotalSales) + parseInt(this.state.RestTotalSales) + parseInt(this.state.OtherTotalSales) + parseInt(this.state.TotalSales)}thousandSeparator={true}displayType={\"text\"}/></p>\r\n                            </Card.Title>\r\n                            \r\n                        </Button>\r\n                    </div>\r\n                    \r\n\r\n                    <div className=\"chart\">\r\n                        <Bar \r\n                            options={options} \r\n                            data={data} \r\n                        />\r\n                        \r\n                    </div>\r\n\r\n                    \r\n                </div>\r\n                    \r\n                    \r\n                <Offcanvas show={this.state.showRooms}>\r\n                    \r\n                    <div className=\"missionvission\">\r\n                        <Offcanvas.Body>\r\n                            <div className=\"size13\">\r\n                                <CloseButton onClick={()=>this.handleRoomClose()}/>\r\n                            </div>\r\n                            <div className=\"missionStatement\">\r\n                                    \r\n                                <Card.Title className=\"mb-3\">\r\n                                    Rooms Payment Analysis\r\n                                </Card.Title>\r\n                                <hr/>\r\n                                <Card.Subtitle className=\"mb-3 text-muted editsub2\">\r\n                                   {transDate}\r\n                                </Card.Subtitle>\r\n                                <Card.Text className=\"mb-3 editsub\">\r\n                                    <div className=\"tableBody\">\r\n                                        <p className=\"adjust5\">Occupancy:{result}</p>\r\n                                        <p className=\"adjust5\">Cash: <NumberFormat value={this.state.Cash}thousandSeparator={true}displayType={\"text\"}/></p>\r\n                                        <p className=\"adjust5\">POS: <NumberFormat value={this.state.POS}thousandSeparator={true}displayType={\"text\"}/></p>\r\n                                        <p className=\"adjust5\">Transfer: <NumberFormat value={this.state.Transfer}thousandSeparator={true}displayType={\"text\"}/></p>\r\n                                        <p className=\"adjust5\">Room: <NumberFormat value= {this.state.Room}thousandSeparator={true}displayType={\"text\"}/></p>\r\n                                        <p className=\"adjust5\">Reservation Deposit.: <NumberFormat value= {this.state.Complimentary}thousandSeparator={true}displayType={\"text\"}/></p> \r\n                                        <p className=\"adjust5\">Total: <NumberFormat value= {this.state.TotalSales}thousandSeparator={true}displayType={\"text\"}/></p>\r\n                                        \r\n                                    </div>\r\n                                </Card.Text>\r\n                                    \r\n                                <br/><br/>\r\n                                \r\n                                        \r\n                            </div>\r\n                            \r\n                            \r\n                        </Offcanvas.Body>\r\n                    </div>\r\n                    \r\n                </Offcanvas>\r\n\r\n                <Offcanvas show={this.state.showOthers}>\r\n                    \r\n                    <div className=\"missionvission\">\r\n                        <Offcanvas.Body>\r\n                            <div className=\"size13\">\r\n                                <CloseButton onClick={()=>this.handleOthersClose()}/>\r\n                            </div>\r\n                            <div className=\"missionStatement\">\r\n                                    \r\n                                <Card.Title className=\"mb-3\">\r\n                                    Others Payment Analysis\r\n                                </Card.Title>\r\n                                <hr/>\r\n                                <Card.Subtitle className=\"mb-3 text-muted editsub\">\r\n                                   {transDate}\r\n                                </Card.Subtitle>\r\n                                <Card.Text className=\"mb-3 editsub\">\r\n                                    <div className=\"tableBody\">\r\n                                                \r\n                                        <p className=\"adjust5\">Cash: <NumberFormat value={this.state.OtherCash}thousandSeparator={true}displayType={\"text\"}/></p>\r\n                                        <p className=\"adjust5\">POS: <NumberFormat value={this.state.OtherPOS}thousandSeparator={true}displayType={\"text\"}/></p>\r\n                                        <p className=\"adjust5\">Transfer: <NumberFormat value={this.state.OtherTransfer}thousandSeparator={true}displayType={\"text\"}/></p>\r\n                                        <p className=\"adjust5\">Room: <NumberFormat value= {this.state.OtherRoom}thousandSeparator={true}displayType={\"text\"}/></p>\r\n                                        <p className=\"adjust5\">Comp.: <NumberFormat value= {this.state.OtherComplimentary}thousandSeparator={true}displayType={\"text\"}/></p> \r\n                                        <p className=\"adjust5\">Total: <NumberFormat value= {this.state.OtherTotalSales}thousandSeparator={true}displayType={\"text\"}/></p>\r\n                                                \r\n                                    </div>\r\n                                   \r\n                                </Card.Text>\r\n                                    \r\n                                <br/><br/>\r\n                                \r\n                                        \r\n                            </div>\r\n                            \r\n                        </Offcanvas.Body>\r\n                    </div>\r\n                    \r\n                </Offcanvas>\r\n\r\n                <Offcanvas show={this.state.showRest}>\r\n                    \r\n                    <div className=\"missionvission\">\r\n                        <Offcanvas.Body>\r\n                            <div className=\"size13\">\r\n                                <CloseButton onClick={()=>this.handleRestClose()}/>\r\n                            </div>\r\n                            <div className=\"missionStatement\">\r\n                                    \r\n                                <Card.Title className=\"mb-3\">\r\n                                    Restaurant Payment Analysis\r\n                                </Card.Title>\r\n                                <hr/>\r\n                                <Card.Subtitle className=\"mb-3 text-muted editsub\">\r\n                                   {transDate}\r\n                                </Card.Subtitle>\r\n                                <Card.Text className=\"mb-3 editsub\">\r\n                                    <div className=\"tableBody\">\r\n                                                    \r\n                                        <p className=\"adjust5\">Cash: <NumberFormat value={this.state.RestCash}thousandSeparator={true}displayType={\"text\"}/></p>\r\n                                        <p className=\"adjust5\">POS: <NumberFormat value={this.state.RestPOS}thousandSeparator={true}displayType={\"text\"}/></p>\r\n                                        <p className=\"adjust5\">Transfer: <NumberFormat value={this.state.RestTransfer}thousandSeparator={true}displayType={\"text\"}/></p>\r\n                                        <p className=\"adjust5\">Room: <NumberFormat value= {this.state.RestRoom}thousandSeparator={true}displayType={\"text\"}/></p>\r\n                                        <p className=\"adjust5\">Comp.: <NumberFormat value= {this.state.RestComplimentary}thousandSeparator={true}displayType={\"text\"}/></p> \r\n                                        <p className=\"adjust5\">Total: <NumberFormat value= {this.state.RestTotalSales}thousandSeparator={true}displayType={\"text\"}/></p>\r\n                                                \r\n                                    </div>\r\n                                </Card.Text>\r\n                                    \r\n                              \r\n                                <br/><br/>\r\n                                \r\n                                        \r\n                            </div>\r\n                            \r\n                        </Offcanvas.Body>\r\n                    </div>\r\n                    \r\n                </Offcanvas>\r\n\r\n                <Offcanvas show={this.state.showInnerBar}>\r\n                    \r\n                    <div className=\"missionvission\">\r\n                        <Offcanvas.Body>\r\n                            <div className=\"size13\">\r\n                                <CloseButton onClick={()=>this.handleInnerBarClose()}/>\r\n                            </div>\r\n                            <div className=\"missionStatement\">\r\n                                    \r\n                                <Card.Title className=\"mb-3\">\r\n                                    Bar Payment Analysis\r\n                                </Card.Title>\r\n                                <hr/>\r\n                                <Card.Subtitle className=\"mb-3 text-muted editsub\">\r\n                                   {transDate}\r\n                                </Card.Subtitle>\r\n                                <Card.Text className=\"mb-3 editsub\">\r\n                                    <div className=\"tableBody\">\r\n                                                        \r\n                                        <p className=\"adjust5\">Cash: <NumberFormat value={this.state.BarCash}thousandSeparator={true}displayType={\"text\"}/></p>\r\n                                        <p className=\"adjust5\">POS: <NumberFormat value={this.state.BarPOS}thousandSeparator={true}displayType={\"text\"}/></p>\r\n                                        <p className=\"adjust5\">Transfer: <NumberFormat value={this.state.BarTransfer}thousandSeparator={true}displayType={\"text\"}/></p>\r\n                                        <p className=\"adjust5\">Room: <NumberFormat value= {this.state.BarRoom}thousandSeparator={true}displayType={\"text\"}/></p>\r\n                                        <p className=\"adjust5\">Comp.: <NumberFormat value= {this.state.BarComplimentary}thousandSeparator={true}displayType={\"text\"}/></p> \r\n                                        <p className=\"adjust5\">Total: <NumberFormat value= {this.state.BarTotalSales}thousandSeparator={true}displayType={\"text\"}/></p>\r\n                                                \r\n                                    </div>\r\n                                </Card.Text>\r\n                                    \r\n                              \r\n                                <br/><br/>\r\n                                \r\n                                        \r\n                            </div>\r\n                            \r\n                        </Offcanvas.Body>\r\n                    </div>\r\n                    \r\n                </Offcanvas>\r\n\r\n                                \r\n            \r\n            </>\r\n        )\r\n    }\r\n    componentDidMount(){\r\n        console.log (\">>> Inside DidMount\")\r\n        fetch(`${occupancyChart}`, {method:'GET'})\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                allOccupied:data.map(item => item.roomStatus).filter(item=> item !=='green'&& item !=='black'),\r\n                allVacant:data.map(item => item.roomStatus).filter(item=> item ==='green'),\r\n                allCorporate:data.map(item => item.roomStatus).filter(item=> item ==='blue'),\r\n                allIndividual:data.map(item => item.roomStatus).filter(item=> item ==='blueviolet'),\r\n                allStaff:data.map(item => item.roomStatus).filter(item=> item ==='deeppink'),\r\n                allComplimentary:data.map(item => item.roomStatus).filter(item=> item ==='orange'),\r\n                allCheckout:data.map(item => item.roomStatus).filter(item=> item ==='black')\r\n            })\r\n            \r\n        })\r\n\r\n        fetch(`${guestDeposits}`, {method:'GET'})\r\n        .then((resp) => resp.json())    \r\n        .then((data) => {\r\n            \r\n\r\n            var allPOS = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.POSAmount)\r\n            }, 0);\r\n            this.setState({POS:allPOS})\r\n\r\n            var allCash = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.CashAmount)\r\n            }, 0);\r\n            this.setState({Cash:allCash})\r\n\r\n            var allTransfer = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.TransferAmount)\r\n            }, 0);\r\n            this.setState({Transfer:allTransfer})\r\n\r\n            var allComp = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.CompDebit)\r\n            }, 0);\r\n            this.setState({Complimentary:allComp})\r\n\r\n            var allRoom = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.roomDebit)\r\n            }, 0);\r\n            this.setState({Room:allRoom})\r\n            \r\n            var Sales = 0;\r\n            var dailySales = Sales + this.state.Cash + this.state.POS + this.state.Transfer + this.state.Room\r\n            this.setState({TotalSales:dailySales})\r\n            \r\n        })\r\n\r\n        fetch(`${otherSales}`, {method:'GET'})\r\n        .then((resp) => resp.json())    \r\n        .then((data) => {\r\n           \r\n\r\n            var allPOS = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.POSAmount)\r\n            }, 0);\r\n            this.setState({OtherPOS:allPOS})\r\n\r\n            var allCash = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.CashAmount)\r\n            }, 0);\r\n            this.setState({OtherCash:allCash})\r\n\r\n            var allTransfer = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.TransferAmount)\r\n            }, 0);\r\n            this.setState({OtherTransfer:allTransfer})\r\n\r\n            var allComp = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.CompDebit)\r\n            }, 0);\r\n            this.setState({OtherComplimentary:allComp})\r\n\r\n            var allRoom = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.roomDebit)\r\n            }, 0);\r\n             this.setState({OtherRoom:allRoom})\r\n            \r\n            var Sales2 = 0;\r\n            var dailySales2 = Sales2 + this.state.OtherCash + this.state.OtherPOS + this.state.OtherTransfer + this.state.OtherRoom \r\n            this.setState({OtherTotalSales:dailySales2})\r\n            \r\n        })\r\n\r\n        fetch(`${getRestaurantSales}`, {method:'GET'})\r\n        .then((resp) => resp.json())    \r\n        .then((data) => {\r\n            var allPOS = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.POSAmount)\r\n            }, 0);\r\n            this.setState({RestPOS:allPOS})\r\n\r\n            var allCash = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.CashAmount)\r\n            }, 0);\r\n            this.setState({RestCash:allCash})\r\n\r\n            var allTransfer = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.TransferAmount)\r\n            }, 0);\r\n            this.setState({RestTransfer:allTransfer})\r\n\r\n            var allComp = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.CompDebit)\r\n            }, 0);\r\n            this.setState({RestComplimentary:allComp})\r\n\r\n            var allRoom = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.roomDebit)\r\n            }, 0);\r\n            this.setState({RestRoom:allRoom})\r\n            \r\n            var Sales3 = 0;\r\n            var dailySales3 = Sales3 + this.state.RestCash + this.state.RestPOS + this.state.RestTransfer + this.state.RestRoom\r\n            this.setState({RestTotalSales:dailySales3})\r\n            \r\n        })\r\n\r\n        fetch(`${getBarNow}`, {method:'GET'})\r\n        .then((resp) => resp.json())    \r\n        .then((data) => {\r\n            var allPOS = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.POSAmount)\r\n            }, 0);\r\n            this.setState({BarPOS:allPOS})\r\n\r\n            var allCash = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.CashAmount)\r\n            }, 0);\r\n            this.setState({BarCash:allCash})\r\n\r\n            var allTransfer = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.TransferAmount)\r\n            }, 0);\r\n            this.setState({BarTransfer:allTransfer})\r\n\r\n            var allComp = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.CompDebit)\r\n            }, 0);\r\n            this.setState({BarComplimentary:allComp})\r\n\r\n            var allRoom = data.map(item => item).reduce((totals, item) =>{\r\n                return totals + parseInt(item.roomDebit)\r\n            }, 0);\r\n            this.setState({BarRoom:allRoom})\r\n            \r\n            var Sales4 = 0;\r\n            var dailySales4 = Sales4 + this.state.BarCash + this.state.BarPOS + this.state.BarTransfer + this.state.BarRoom\r\n            this.setState({BarTotalSales:dailySales4})\r\n            \r\n        })\r\n\r\n        fetch(`${getWorkDate}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            data.map((item)=>{\r\n                this.setState({date:item.date})\r\n                return 'ok'\r\n            })\r\n            \r\n           \r\n        })\r\n\r\n        this.myTimer = setTimeout(() => {\r\n            fetch(`${occupancyChart}`, {method:'GET'})\r\n            .then((resp) => resp.json())\r\n            .then((data) => {\r\n                this.setState({\r\n                    allOccupied:data.map(item => item.roomStatus).filter(item=> item !=='green'&& item !=='black'),\r\n                    allVacant:data.map(item => item.roomStatus).filter(item=> item ==='green'),\r\n                    allCorporate:data.map(item => item.roomStatus).filter(item=> item ==='blue'),\r\n                    allIndividual:data.map(item => item.roomStatus).filter(item=> item ==='blueviolet'),\r\n                    allStaff:data.map(item => item.roomStatus).filter(item=> item ==='deeppink'),\r\n                    allComplimentary:data.map(item => item.roomStatus).filter(item=> item ==='orange'),\r\n                    allCheckout:data.map(item => item.roomStatus).filter(item=> item ==='black')\r\n                })\r\n                \r\n            })\r\n\r\n            fetch(`${guestDeposits}`, {method:'GET'})\r\n            .then((resp) => resp.json())    \r\n            .then((data) => {\r\n                \r\n\r\n                var allPOS = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.POSAmount)\r\n                }, 0);\r\n                this.setState({POS:allPOS})\r\n\r\n                var allCash = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.CashAmount)\r\n                }, 0);\r\n                this.setState({Cash:allCash})\r\n\r\n                var allTransfer = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.TransferAmount)\r\n                }, 0);\r\n                this.setState({Transfer:allTransfer})\r\n\r\n                var allComp = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.CompDebit)\r\n                }, 0);\r\n                this.setState({Complimentary:allComp})\r\n\r\n                var allRoom = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.roomDebit)\r\n                }, 0);\r\n                this.setState({Room:allRoom})\r\n                \r\n                var Sales = 0;\r\n                var dailySales = Sales + this.state.Cash + this.state.POS + this.state.Transfer + this.state.Room\r\n                this.setState({TotalSales:dailySales})\r\n                \r\n                })\r\n\r\n            fetch(`${otherSales}`, {method:'GET'})\r\n            .then((resp) => resp.json())    \r\n            .then((data) => {\r\n            \r\n\r\n                var allPOS = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.POSAmount)\r\n                }, 0);\r\n                this.setState({OtherPOS:allPOS})\r\n\r\n                var allCash = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.CashAmount)\r\n                }, 0);\r\n                this.setState({OtherCash:allCash})\r\n\r\n                var allTransfer = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.TransferAmount)\r\n                }, 0);\r\n                this.setState({OtherTransfer:allTransfer})\r\n\r\n                var allComp = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.CompDebit)\r\n                }, 0);\r\n                this.setState({OtherComplimentary:allComp})\r\n\r\n                var allRoom = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.roomDebit)\r\n                }, 0);\r\n                this.setState({OtherRoom:allRoom})\r\n                \r\n                var Sales2 = 0;\r\n                var dailySales2 = Sales2 + this.state.OtherCash + this.state.OtherPOS + this.state.OtherTransfer + this.state.OtherRoom\r\n                this.setState({OtherTotalSales:dailySales2})\r\n                \r\n            })\r\n\r\n            fetch(`${getRestaurantSales}`, {method:'GET'})\r\n            .then((resp) => resp.json())    \r\n            .then((data) => {\r\n                var allPOS = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.POSAmount)\r\n                }, 0);\r\n                this.setState({RestPOS:allPOS})\r\n\r\n                var allCash = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.CashAmount)\r\n                }, 0);\r\n                this.setState({RestCash:allCash})\r\n\r\n                var allTransfer = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.TransferAmount)\r\n                }, 0);\r\n                this.setState({RestTransfer:allTransfer})\r\n\r\n                var allComp = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.CompDebit)\r\n                }, 0);\r\n                this.setState({RestComplimentary:allComp})\r\n\r\n                var allRoom = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.roomDebit)\r\n                }, 0);\r\n                this.setState({RestRoom:allRoom})\r\n                \r\n                var Sales3 = 0;\r\n                var dailySales3 = Sales3 + this.state.RestCash + this.state.RestPOS + this.state.RestTransfer + this.state.RestRoom\r\n                this.setState({RestTotalSales:dailySales3})\r\n                \r\n            })\r\n\r\n            fetch(`${getBarNow}`, {method:'GET'})\r\n            .then((resp) => resp.json())    \r\n            .then((data) => {\r\n                var allPOS = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.POSAmount)\r\n                }, 0);\r\n                this.setState({BarPOS:allPOS})\r\n\r\n                var allCash = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.CashAmount)\r\n                }, 0);\r\n                this.setState({BarCash:allCash})\r\n\r\n                var allTransfer = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.TransferAmount)\r\n                }, 0);\r\n                this.setState({BarTransfer:allTransfer})\r\n\r\n                var allComp = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.CompDebit)\r\n                }, 0);\r\n                this.setState({BarComplimentary:allComp})\r\n\r\n                var allRoom = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.roomDebit)\r\n                }, 0);\r\n                this.setState({BarRoom:allRoom})\r\n                \r\n                var Sales4 = 0;\r\n                var dailySales4 = Sales4 + this.state.BarCash + this.state.BarPOS + this.state.BarTransfer + this.state.BarRoom\r\n                this.setState({BarTotalSales:dailySales4})\r\n                \r\n            })\r\n\r\n            \r\n        },3000);\r\n\r\n                       \r\n                     \r\n        \r\n        this.myTimer = setInterval(() => {\r\n            fetch(`${occupancyChart}`, {method:'GET'})\r\n            .then((resp) => resp.json())\r\n            .then((data) => {\r\n                this.setState({\r\n                    allOccupied:data.map(item => item.roomStatus).filter(item=> item !=='green'&& item !=='black'),\r\n                    allVacant:data.map(item => item.roomStatus).filter(item=> item ==='green'),\r\n                    allCorporate:data.map(item => item.roomStatus).filter(item=> item ==='blue'),\r\n                    allIndividual:data.map(item => item.roomStatus).filter(item=> item ==='blueviolet'),\r\n                    allStaff:data.map(item => item.roomStatus).filter(item=> item ==='deeppink'),\r\n                    allComplimentary:data.map(item => item.roomStatus).filter(item=> item ==='orange'),\r\n                    allCheckout:data.map(item => item.roomStatus).filter(item=> item ==='black')\r\n                })\r\n                \r\n            })\r\n\r\n            fetch(`${guestDeposits}`, {method:'GET'})\r\n            .then((resp) => resp.json())    \r\n            .then((data) => {\r\n                \r\n\r\n                var allPOS = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.POSAmount)\r\n                }, 0);\r\n                this.setState({POS:allPOS})\r\n\r\n                var allCash = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.CashAmount)\r\n                }, 0);\r\n                this.setState({Cash:allCash})\r\n\r\n                var allTransfer = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.TransferAmount)\r\n                }, 0);\r\n                this.setState({Transfer:allTransfer})\r\n\r\n                var allComp = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.CompDebit)\r\n                }, 0);\r\n                this.setState({Complimentary:allComp})\r\n\r\n                var allRoom = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.roomDebit)\r\n                }, 0);\r\n                this.setState({Room:allRoom})\r\n                \r\n                var Sales = 0;\r\n                var dailySales = Sales + this.state.Cash + this.state.POS + this.state.Transfer + this.state.Room\r\n                this.setState({TotalSales:dailySales})\r\n                \r\n                })\r\n\r\n            fetch(`${otherSales}`, {method:'GET'})\r\n            .then((resp) => resp.json())    \r\n            .then((data) => {\r\n            \r\n\r\n                var allPOS = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.POSAmount)\r\n                }, 0);\r\n                this.setState({OtherPOS:allPOS})\r\n\r\n                var allCash = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.CashAmount)\r\n                }, 0);\r\n                this.setState({OtherCash:allCash})\r\n\r\n                var allTransfer = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.TransferAmount)\r\n                }, 0);\r\n                this.setState({OtherTransfer:allTransfer})\r\n\r\n                var allComp = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.CompDebit)\r\n                }, 0);\r\n                this.setState({OtherComplimentary:allComp})\r\n\r\n                var allRoom = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.roomDebit)\r\n                }, 0);\r\n                this.setState({OtherRoom:allRoom})\r\n                \r\n                var Sales2 = 0;\r\n                var dailySales2 = Sales2 + this.state.OtherCash + this.state.OtherPOS + this.state.OtherTransfer + this.state.OtherRoom\r\n                this.setState({OtherTotalSales:dailySales2})\r\n                \r\n            })\r\n\r\n            fetch(`${getRestaurantSales}`, {method:'GET'})\r\n            .then((resp) => resp.json())    \r\n            .then((data) => {\r\n                var allPOS = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.POSAmount)\r\n                }, 0);\r\n                this.setState({RestPOS:allPOS})\r\n\r\n                var allCash = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.CashAmount)\r\n                }, 0);\r\n                this.setState({RestCash:allCash})\r\n\r\n                var allTransfer = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.TransferAmount)\r\n                }, 0);\r\n                this.setState({RestTransfer:allTransfer})\r\n\r\n                var allComp = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.CompDebit)\r\n                }, 0);\r\n                this.setState({RestComplimentary:allComp})\r\n\r\n                var allRoom = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.roomDebit)\r\n                }, 0);\r\n                this.setState({RestRoom:allRoom})\r\n                \r\n                var Sales3 = 0;\r\n                var dailySales3 = Sales3 + this.state.RestCash + this.state.RestPOS + this.state.RestTransfer + this.state.RestRoom\r\n                this.setState({RestTotalSales:dailySales3})\r\n                \r\n            })\r\n\r\n            fetch(`${getBarNow}`, {method:'GET'})\r\n            .then((resp) => resp.json())    \r\n            .then((data) => {\r\n                var allPOS = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.POSAmount)\r\n                }, 0);\r\n                this.setState({BarPOS:allPOS})\r\n\r\n                var allCash = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.CashAmount)\r\n                }, 0);\r\n                this.setState({BarCash:allCash})\r\n\r\n                var allTransfer = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.TransferAmount)\r\n                }, 0);\r\n                this.setState({BarTransfer:allTransfer})\r\n\r\n                var allComp = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.CompDebit)\r\n                }, 0);\r\n                this.setState({BarComplimentary:allComp})\r\n\r\n                var allRoom = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.roomDebit)\r\n                }, 0);\r\n                this.setState({BarRoom:allRoom})\r\n                \r\n                var Sales4 = 0;\r\n                var dailySales4 = Sales4 + this.state.BarCash + this.state.BarPOS + this.state.BarTransfer + this.state.BarRoom\r\n                this.setState({BarTotalSales:dailySales4})\r\n                \r\n            })\r\n\r\n           \r\n        },300000);\r\n\r\n\r\n    }\r\n}\r\nexport default NewDashboard;\r\n\r\n","import React, { Component } from 'react';\r\nimport './Reception.css';\r\nimport NumberFormat from 'react-number-format';\r\nimport moment from 'moment';\r\nimport DatePicker from 'react-datepicker';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport addDays from 'date-fns/addDays';\r\nimport Spinner from 'react-bootstrap/Spinner';\r\nimport Newheader from './Newheader';\r\nimport Adlogin from './Adlogin';\r\n\r\nconst occuppancyUrl = \"http://us3.localto.net:39344/checkin\";\r\nconst checkInDataUrl = \"http://us3.localto.net:39344/getrmstatus\";\r\nconst occuppancySearchData = \"http://us3.localto.net:39344/getDailyOccuppancy?\";\r\n\r\n\r\nclass CheckInReport extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        console.log(\">>>Inside ROConstructor\")\r\n\r\n        this.state = {\r\n            occuppancyData:'',\r\n            occuppancySearch:'',\r\n            date:'',\r\n            percentOcc:'',\r\n            NumOccuppied:'',\r\n            NumAllRms:'',\r\n            AllRms:'',\r\n            percentCalculated:'',\r\n           Blogin:'',\r\n\r\n        }\r\n        this.checkinhandleChange = this.checkinhandleChange.bind(this);\r\n        \r\n\r\n    }\r\n\r\n    checkinhandleChange(date) {\r\n        this.setState({\r\n            date: date,\r\n           \r\n\r\n        });\r\n    }\r\n\r\n    renderDate() {\r\n        return (\r\n            <div>\r\n                <DatePicker\r\n                    selected={this.state.date}\r\n                    onChange={this.checkinhandleChange}\r\n                    maxDate={addDays(new Date(),0)}\r\n                    dropdownMode=\"select\"\r\n                    dateFormat=\"MMM/d/ yyyy\"\r\n                    className=\"form-control mb-3 formsize printing alignText112\"\r\n                    placeholderText='Select Start Date'\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    findOccuppancySearch(){\r\n\r\n        var searchDate = moment(this.state.date).format('MMM DD YYYY')\r\n\r\n        this.setState({occuppancyData:''})\r\n\r\n        fetch(`${occuppancySearchData}occuppancyToday=${searchDate}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            \r\n            data.map((item) =>{\r\n                this.setState({\r\n                    occuppancyData:item.OccuppancyData\r\n                })\r\n                return 'ok'\r\n            })\r\n        \r\n        });\r\n\r\n\r\n    }\r\n\r\n    resetOccupancy(){\r\n\r\n        // var searchDate = moment(this.state.date).format('MMM DD YYYY')\r\n\r\n        this.setState({occuppancyData:'',date:''})\r\n\r\n        fetch(`${occuppancyUrl}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                occuppancyData:data\r\n            })\r\n            \r\n        });\r\n\r\n\r\n    }\r\n\r\n    renderOccupancyData(data){\r\n        if (data){\r\n            data.sort((a, b) => (a.roomNumbers) - (b.roomNumbers));\r\n            return data.map((item) => {\r\n                var arrDt = moment(item.arrivalDate).format('YYYY-DD-MMM')\r\n                var depDt = moment(item.departureDate).format('YYYY-DD-MMM')\r\n                return(\r\n                    <>\r\n                        <tr key= {item._id}>\r\n                            <td className=\"table-light table-striped adjust225\">{item.fname} {item.lname}</td>\r\n                            <td className=\"table-light table-striped adjust222\">{item.roomNumbers}</td>\r\n                            <td className=\"table-light table-striped adjust225\">{item.roomtypeName}</td>\r\n                            <td className=\"table-light table-striped adjust20\"><NumberFormat value= {item.roomRate}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust222\">{item.discounType}</td>\r\n                            <td className=\"table-light table-striped adjust20\"><NumberFormat value= {item.discountAmount}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust20\"><NumberFormat value= {item.dailyRate}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2\">{arrDt}</td>\r\n                            <td className=\"table-light table-striped adjust2\">{depDt}</td>\r\n                                    \r\n                        </tr>\r\n                    </>\r\n                )\r\n            })\r\n        }\r\n        else{\r\n            return(\r\n                <>\r\n                    <Spinner animation=\"border\" variant=\"primary\" />\r\n                    <Spinner animation=\"border\" variant=\"danger\" />\r\n                    <Spinner animation=\"border\" variant=\"warning\" />\r\n                </>\r\n            )\r\n        }\r\n    }\r\n   \r\n\r\n    render() {\r\n        console.log(\">>> Inside ROtrender\", this.state)\r\n        if(localStorage.getItem('rtk')==null||localStorage.getItem('userdata')===null){\r\n            return(\r\n                <>\r\n                    <Adlogin/>\r\n                </>\r\n            )\r\n\r\n        }\r\n        \r\n        return (\r\n            <>\r\n                <Newheader/>\r\n                <div className=\"container\">\r\n                    \r\n                    <br/>\r\n                    <center><h5>Room Occupancy Report</h5>\r\n                        \r\n                    </center>\r\n                    <br/>\r\n                    <table className=\"table table-hover\">\r\n                    \r\n                        <thead className=\"table-warning\">\r\n                            <tr>\r\n                                <th className=\"adjust5\">Names</th>\r\n                                <th className=\"adjust5\">Room</th>\r\n                                <th className=\"adjust5\">Type</th>\r\n                                <th className=\"adjust5\">Rate</th>\r\n                                <th className=\"adjust5\">DiscType</th>\r\n                                <th className=\"adjust5\">DiscAmt</th>\r\n                                <th className=\"adjust5\">Daily Rate</th>\r\n                                <th className=\"adjust5\">Arr</th>\r\n                                <th className=\"adjust5\">Dep</th>\r\n                                \r\n                                        \r\n                            </tr>\r\n                        </thead>\r\n                        <tbody className=\"table table-hover\">\r\n                            {this.renderOccupancyData(this.state.occuppancyData)}\r\n                        \r\n                        </tbody>\r\n                        <br/>\r\n                    \r\n                    </table>\r\n                    <div className=\"row\">\r\n                        <h6>Occupancy Summary:</h6>\r\n                        <hr/>\r\n                        <div className=\"col-4\">\r\n                            <p><span className=\"textSize30\">No. of Occupied Rooms:</span><span className=\"textSize31\"> {this.state.NumOccuppied}</span></p>\r\n                        </div>\r\n                        <div className=\"col-4\">\r\n                            <p><span className=\"textSize30\">Total Num of Rooms:</span><span className=\"textSize31\"> {this.state.NumAllRms}</span></p>\r\n                        </div>\r\n                        <div className=\"col-4\">\r\n                            <p><span className=\"textSize30\">Percentage Occupancy:</span><span className=\"textSize31\"> {this.state.percentCalculated} %</span></p>\r\n                        </div>\r\n                        <hr/>\r\n                    </div>\r\n\r\n                    <center>\r\n                        <button className=\"btn btn-warning printing\" onClick={ () => window.print()}>Print</button>\r\n                        <button className=\"btn btn-danger printing space\" onClick={ () => this.props.history.push('/')}>Close</button>\r\n                    </center>\r\n                   \r\n\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n\r\n    async componentDidMount() {\r\n        console.log (\">>> Inside ROdidMount\")\r\n        \r\n        fetch(`${occuppancyUrl}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) =>{\r\n            this.setState({\r\n                occuppancyData:data,\r\n               \r\n            \r\n            })\r\n            \r\n        })\r\n        fetch(`${checkInDataUrl}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) =>{\r\n            this.setState({\r\n                percentOcc:data.map(item => item.roomStatus).filter(item=> item !=='green'&& item !=='black'),\r\n                AllRms:data.map(item => item.roomStatus).filter(item=> item) \r\n            \r\n            })\r\n            var occuppiedRooms=this.state.percentOcc;\r\n            var occuppied = occuppiedRooms.length;\r\n            this.setState({NumOccuppied:occuppied});\r\n\r\n            var AllRooms=this.state.AllRms;\r\n            var AllRms = parseInt(AllRooms.length);\r\n            this.setState({NumAllRms:AllRms});\r\n            \r\n\r\n            var percOcc = 0;\r\n            percOcc = percOcc + parseFloat(this.state.NumOccuppied) / parseFloat(this.state.NumAllRms) * 100;\r\n            this.setState({percentCalculated:percOcc.toFixed(2)})\r\n            \r\n        })\r\n\r\n        \r\n    }\r\n}\r\n\r\nexport default CheckInReport;","import React, { Component } from 'react';\r\nimport { Calendar, dateFnsLocalizer } from 'react-big-calendar';\r\nimport format from 'date-fns/format';\r\nimport parse from 'date-fns/parse';\r\nimport startOfWeek from 'date-fns/startOfWeek';\r\nimport getDay from 'date-fns/getDay';\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\nimport { locales } from 'moment';\r\nimport './Reception.css';\r\nimport {Link} from 'react-router-dom';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport Newheader from './Newheader';\r\nimport Adlogin from './Adlogin';\r\n\r\n\r\n\r\nconst localizer = dateFnsLocalizer({\r\n   format,\r\n   parse,\r\n   startOfWeek,\r\n   getDay,\r\n   locales,\r\n})\r\n\r\nconst GetReservation = \"http://us3.localto.net:39344/reservation\";\r\n\r\n\r\nclass Reservation extends Component {\r\n    constructor(props) {\r\n        super(props);\r\nconsole.log(\">>> inside ReservContructor\", props)\r\n        this.state = {\r\n            events: [],\r\n            _id:Math.floor(Math.random()*100000000),\r\n            fname:'',\r\n            lname:'',\r\n            allDay: '',\r\n            start: '',\r\n            end: '',\r\n            room: '',\r\n            title:'',\r\n            phone:'',\r\n            rsvAmount:'',\r\n            displayAllRoomNums:'',\r\n            displayOccupiedRoomNums:'',\r\n            printBTN:'Print',\r\n            transactionDate:''\r\n            \r\n            \r\n            \r\n        };\r\n        this.starthandleChange = this.starthandleChange.bind(this);\r\n        this.endhandleChange = this.endhandleChange.bind(this);\r\n    }\r\n\r\n    // logout(){\r\n    //     localStorage.removeItem('userInfo');\r\n    //     this.setState({\r\n    //         login:true\r\n    //     })\r\n        \r\n    // }\r\n\r\n    starthandleChange(date) {\r\n        this.setState({\r\n            start: date\r\n        });\r\n        var newtitle =(this.state.room+  ' '   +this.state.fname+  ' '  +this.state.lname+ ' ' +this.state.phone)\r\n        this.setState({title:newtitle})\r\n    }\r\n\r\n    endhandleChange(date) {\r\n        this.setState({\r\n            end: date\r\n        });\r\n    }\r\n\r\n    render() {\r\n        console.log (\">>> Inside Rsvdetails\", this.state)\r\n        \r\n        if(localStorage.getItem('rtk')==null||localStorage.getItem('userdata')===null){\r\n            return(\r\n                <>\r\n                    <Adlogin/>\r\n                </>\r\n            )\r\n\r\n        }\r\n        \r\n        return (\r\n            <>\r\n                <Newheader/>\r\n                <div  className=\"background993\">\r\n                    <div>\r\n                            \r\n                        <h4 style = {{marginLeft:'20px'}}>Reservations</h4>\r\n                            \r\n                    </div>\r\n                    \r\n                    \r\n                    <div>\r\n                        <Calendar \r\n                            localizer={localizer} events={this.state.events} \r\n                            startAccessor=\"start\" endAccessor= \"end\" className=\"calendarSettings\"\r\n                            selectable={true}\r\n                            onSelectEvent={this.handleEventSelection} \r\n                        /> \r\n                    </div>\r\n                              \r\n                    <div>\r\n                        <center>\r\n                            <>\r\n                                <Link to=\"/\">\r\n                                    <button className=\"btn btn-danger space\">Close</button>\r\n                                </Link>\r\n                            </>\r\n                        </center>\r\n                    </div>   \r\n                    \r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n    async componentDidMount(){\r\n        console.log(\">>> Inside RsvDidMount\", this.state)\r\n        fetch(`${GetReservation}`, {method:'GET'})\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                events:data\r\n            })\r\n            data.map((item)=>{\r\n                this.setState({rsvAmount:item.rsvAmount})\r\n                return 'ok'\r\n            })\r\n            \r\n            \r\n        })\r\n    }\r\n}\r\n\r\nexport default Reservation;","import React, { Component } from 'react';\r\nimport './Reception.css';\r\nimport NumberFormat from 'react-number-format';\r\nimport DatePicker from 'react-datepicker';\r\nimport moment from 'moment';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport addDays from 'date-fns/addDays';\r\nimport Newheader from './Newheader';\r\nimport Adlogin from './Adlogin';\r\n\r\n\r\n\r\n\r\nconst getAllbar = \"http://us3.localto.net:39344/salesReport?BarSales=Bar%20Sales\";\r\nconst getAllRest = \"http://us3.localto.net:39344/salesReport?restSales=Restaurant%20Sales\";\r\nconst getAllOther = \"http://us3.localto.net:39344/salesReport?otherSales=Other%20Sales\";\r\nconst getAllDeposits = \"http://us3.localto.net:39344/salesReport?accDepositReceptn=Accommodation%20Deposits\";\r\n\r\n\r\nclass CashCollection extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        console.log(\">>>Inside CashConstructor\",props)\r\n        this.state = {\r\n            RoomDeposits:'',\r\n            RoomTotal:0,\r\n            depPOS:0,\r\n            depCash:0,\r\n            depTransfer:0,\r\n            depRoom:0,\r\n            BarSales:0,\r\n            BarTotal:0,\r\n            barPOS:0,\r\n            barCash:0,\r\n            barTransfer:0,\r\n            barRoom:0,\r\n            RestSales:'',\r\n            RestTotal:0,\r\n            restPOS:0,\r\n            restCash:0,\r\n            restTransfer:0,\r\n            restRoom:0,\r\n            otherSales:0,\r\n            othersTotal:0,\r\n            otherPOS:0,\r\n            otherCash:0,\r\n            otherTransfer:0,\r\n            otherRoom:0,\r\n            POSCal:0,\r\n            CashCal:0,\r\n            TransferCal:0,\r\n            RoomCal:0,\r\n            poolPOS:0,\r\n            poolCash:0,\r\n            poolRoom:0,\r\n            poolTransfer:0,\r\n            \r\n            startdate:'',\r\n            endDate:'',\r\n\r\n            \r\n        };\r\n        this.checkinhandleChange = this.checkinhandleChange.bind(this);\r\n        this.endhandleChange = this.endhandleChange.bind(this);\r\n\r\n    }\r\n    checkinhandleChange(date) {\r\n        this.setState({\r\n            date: date,\r\n           \r\n\r\n        });\r\n    }\r\n\r\n    endhandleChange(date) {\r\n        this.setState({\r\n            endDate: date\r\n        });\r\n    }\r\n\r\n    \r\n    renderDate() {\r\n        return (\r\n            <div>\r\n                <DatePicker\r\n                    selected={this.state.date}\r\n                    onChange={this.checkinhandleChange}\r\n                    maxDate={addDays(new Date(),0)}\r\n                    dropdownMode=\"select\"\r\n                    dateFormat=\"MMM/d/ yyyy\"\r\n                    className=\"form-control mb-3 formsize printing alignText112\"\r\n                    placeholderText='Select Start Date'\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    renderendDate() {\r\n        return (\r\n            <div>\r\n                <DatePicker\r\n                    selected={this.state.endDate}\r\n                    onChange={this.endhandleChange}\r\n                    maxDate={(new Date())}\r\n                    dropdownMode=\"select\"\r\n                    dateFormat=\"MMM/d/ yyyy\"\r\n                    className=\"form-control mb-3 formsize printing alignText112 mvrght\"\r\n                    placeholderText=\"Search End Date\"\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    handleChange=(event)=>{\r\n        \r\n        this.setState({\r\n            [event.target.name]:event.target.value\r\n        })\r\n\r\n    }\r\n\r\n    findSalesReport(){\r\n        var thisDate = moment(this.state.date).format('MMM DD YYYY')\r\n        \r\n        this.setState({\r\n            depRoom:0,\r\n            depTransfer:0,\r\n            depCash:0,\r\n            depPOS:0,\r\n            RoomTotal:0,\r\n            RoomDeposits:'',\r\n            RestSales:'',\r\n            BarSales:'',\r\n            otherSales:''\r\n\r\n\r\n\r\n\r\n        })\r\n        fetch(`${getAllDeposits}&&today=${thisDate}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            this.setState({RoomDeposits:data});\r\n            \r\n                data.map((item) => {\r\n\r\n                    \r\n                    var allPOS = data.map(item => item).reduce((totals, item) =>{\r\n                        return totals + parseInt(item.POS)\r\n                    }, 0);\r\n                    this.setState({depPOS:allPOS});\r\n    \r\n                    var allCash = data.map(item => item).reduce((totals, item) =>{\r\n                        return totals + parseInt(item.Cash)\r\n                    }, 0);\r\n                    this.setState({depCash:allCash});\r\n    \r\n                    var allTransfer = data.map(item => item).reduce((totals, item) =>{\r\n                        return totals + parseInt(item.Transfer)\r\n                    }, 0);\r\n                    this.setState({depTransfer:allTransfer});\r\n    \r\n                    var allRoom = data.map(item => item).reduce((totals, item) =>{\r\n                        return totals + parseInt(item.Room)\r\n                    }, 0);\r\n                    this.setState({depRoom:allRoom});\r\n                    \r\n                    this.myTimer = setTimeout(() =>{\r\n                        var RmSales = 0;\r\n                        var roomSales = RmSales + parseInt(this.state.depCash) + parseInt(this.state.depPOS) + parseInt(this.state.depTransfer) + parseInt(this.state.depRoom)\r\n                        this.setState({RoomTotal:roomSales});\r\n                    \r\n                    },2000)\r\n                    \r\n                    return 'ok'\r\n                })\r\n            \r\n                if((data).lenght===0){\r\n                alert('No Data Found')\r\n                this.setState({\r\n                    depRoom:0,\r\n                    depTransfer:0,\r\n                    depCash:0,\r\n                    depPOS:0,\r\n                    RoomTotal:0\r\n\r\n                })\r\n            }\r\n            \r\n            \r\n            \r\n        });\r\n                \r\n       \r\n        fetch(`${getAllRest}&&resttoday=${thisDate}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n        this.setState({RestSales:data});\r\n        \r\n            data.map((item) => {\r\n              \r\n                var restallPOS = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.POS)\r\n                }, 0);\r\n                this.setState({restPOS:restallPOS});\r\n\r\n                var restallCash = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.Cash)\r\n                }, 0);\r\n                this.setState({restCash:restallCash});\r\n\r\n                var restallTransfer = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.Transfer)\r\n                }, 0);\r\n                this.setState({restTransfer:restallTransfer});\r\n\r\n                var restallRoom = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.Room)\r\n                }, 0);\r\n                this.setState({restRoom:restallRoom});\r\n\r\n                this.myTimer = setTimeout(() => {\r\n                    var AllRest = 0;\r\n                    var restSales = AllRest + parseInt(this.state.restCash) + parseInt(this.state.restPOS) + parseInt(this.state.restTransfer) + parseInt(this.state.restRoom)\r\n                    this.setState({RestTotal:restSales})\r\n                },2000)\r\n                \r\n                \r\n                return 'ok'\r\n            })\r\n        \r\n            if((data).lenght===0){\r\n                alert('No Data Found')\r\n                this.setState({\r\n                    restRoom:0,\r\n                    restTransfer:0,\r\n                    restCash:0,\r\n                    restPOS:0,\r\n                    RestTotal:0\r\n\r\n                })\r\n            }\r\n        \r\n        });\r\n\r\n        fetch(`${getAllbar}&&bartoday=${thisDate}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n        this.setState({BarSales:data});\r\n        \r\n            data.map((item) => {\r\n\r\n                var barallPOS = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.POS)\r\n                }, 0);\r\n                this.setState({barPOS:barallPOS});\r\n\r\n                var barallCash = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.Cash)\r\n                }, 0);\r\n                this.setState({barCash:barallCash});\r\n\r\n                var barallTransfer = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.Transfer)\r\n                }, 0);\r\n                this.setState({barTransfer:barallTransfer});\r\n\r\n                var barallRoom = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.Room)\r\n                }, 0);\r\n                this.setState({barRoom:barallRoom});\r\n\r\n                this.myTimer = setTimeout(() => {\r\n                    var BarTotal = 0;\r\n                    var barSales = BarTotal + parseInt(this.state.barCash) + parseInt(this.state.barPOS) + parseInt(this.state.barTransfer) + parseInt(this.state.barRoom)\r\n                    this.setState({BarTotal:barSales})\r\n\r\n                },2000)\r\n                                    \r\n                return 'ok'\r\n            })\r\n        \r\n            if((data).lenght===0){\r\n                alert('No Data Found')\r\n                this.setState({\r\n                    barRoom:0,\r\n                    barTransfer:0,\r\n                    barCash:0,\r\n                    barPOS:0,\r\n                    BarTotal:0\r\n\r\n                })\r\n            }\r\n        \r\n        });\r\n        \r\n\r\n        fetch(`${getAllOther}&&othertoday=${thisDate}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n        this.setState({otherSales:data});\r\n        \r\n            data.map((item) => {\r\n\r\n                var othersallPOS = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.POS)\r\n                }, 0);\r\n                this.setState({otherPOS:othersallPOS});\r\n\r\n                var othersallCash = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.Cash)\r\n                }, 0);\r\n                this.setState({otherCash:othersallCash});\r\n\r\n                var othersallTransfer = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.Transfer)\r\n                }, 0);\r\n                this.setState({otherTransfer:othersallTransfer});\r\n\r\n                var othersallRoom = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.Room)\r\n                }, 0);\r\n                this.setState({otherRoom:othersallRoom});\r\n\r\n                this.myTimer = setTimeout(() => {\r\n                    var AllOthers = 0;\r\n                    var OtherSales = AllOthers + parseInt(this.state.otherCash) + parseInt(this.state.otherPOS) + parseInt(this.state.otherTransfer) + parseInt(this.state.otherRoom)\r\n                    this.setState({othersTotal:OtherSales})\r\n                \r\n                },2000)\r\n                \r\n                return 'ok'\r\n            })\r\n        \r\n            if((data).lenght===0){\r\n                alert('No Data Found')\r\n                this.setState({\r\n                    otherRoom:0,\r\n                    otherTransfer:0,\r\n                    otherCash:0,\r\n                    otherPOS:0,\r\n                    othersTotal:0\r\n\r\n                })\r\n            }\r\n            \r\n        });\r\n    }\r\n    \r\n\r\n    // logout(){\r\n    //     localStorage.removeItem('userInfo');\r\n    //     this.setState({\r\n    //         login:true\r\n    //     })\r\n    //     localStorage.removeItem('shift')\r\n        \r\n    // }\r\n    cleanupfirst(){\r\n        this.setState({ RoomDeposits:'',\r\n                        RoomTotal:0,\r\n                        depPOS:0,\r\n                        depCash:0,\r\n                        depTransfer:0,\r\n                        depRoom:0,\r\n                        BarSales:0,\r\n                        BarTotal:0,\r\n                        barPOS:0,\r\n                        barCash:0,\r\n                        barTransfer:0,\r\n                        barRoom:0,\r\n                        RestSales:'',\r\n                        RestTotal:0,\r\n                        restPOS:0,\r\n                        restCash:0,\r\n                        restTransfer:0,\r\n                        restRoom:0,\r\n                        functionSales:0,\r\n                        functionTotal:0,\r\n                        functionRoom:0,\r\n                        functionTransfer:0,\r\n                        functionCash:0,\r\n                        functionPOS:0,\r\n                        otherSales:0,\r\n                        othersTotal:0,\r\n                        otherPOS:0,\r\n                        otherCash:0,\r\n                        otherTransfer:0,\r\n                        otherRoom:0,\r\n                        poolSales:0,\r\n                        PoolTotal:0,\r\n                        SpoolPOS:0,\r\n                        poolsCash:0,\r\n                        poolsTransfer:0,\r\n                        poolsRoom:'',\r\n                        POSCal:0,\r\n                        CashCal:0,\r\n                        TransferCal:0,\r\n                        RoomCal:0,\r\n                        poolPOS:0,\r\n                        poolCash:0,\r\n                        poolRoom:0,\r\n                        poolTransfer:0\r\n                    })\r\n    }\r\n\r\n    \r\n    renderRoomSales=(data)=>{\r\n        if(data){\r\n            \r\n            return data.map((item)=>{\r\n                \r\n                \r\n                \r\n                return(\r\n                    <>\r\n                        <tr key= {item._id}>\r\n                            \r\n                            \r\n                            <td className=\"table-light table-striped adjust2 alignTet\">{item.description}</td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.POS}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.Cash}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.Room}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.Transfer}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><b><NumberFormat value={parseInt(item.POS) + parseInt(item.Cash) + parseInt(item.Room) + parseInt(item.Transfer)}thousandSeparator={true}displayType={\"text\"}/></b></td> \r\n                            \r\n                        </tr>\r\n                        \r\n                    </>\r\n                )\r\n               \r\n            })\r\n            \r\n        }\r\n        \r\n    }\r\n\r\n    renderRestSales=(data)=>{\r\n        if(data){\r\n           \r\n            return data.map((item)=>{\r\n                \r\n                \r\n                return(\r\n                    <>\r\n                        <tr key= {item._id}>\r\n                            \r\n                            \r\n                            <td className=\"table-light table-striped adjust2 alignTet\">{item.description}</td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.POS}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.Cash}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.Room}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.Transfer}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><b><NumberFormat value={parseInt(item.POS) + parseInt(item.Cash) + parseInt(item.Room) + parseInt(item.Transfer)}thousandSeparator={true}displayType={\"text\"}/></b></td>\r\n                            \r\n                        </tr>\r\n                        \r\n                    </>\r\n                )\r\n               \r\n            })\r\n            \r\n        }\r\n        \r\n           \r\n    }\r\n\r\n    renderBarSales=(data)=>{\r\n        if(data){\r\n           \r\n            return data.map((item)=>{\r\n               \r\n                \r\n                return(\r\n                    <>\r\n                        <tr key= {item._id}>\r\n                            \r\n                            \r\n                            <td className=\"table-light table-striped adjust2 alignTet\">{item.description}</td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.POS}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.Cash}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.Room}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.Transfer}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><b><NumberFormat value={parseInt(item.POS) + parseInt(item.Cash) + parseInt(item.Room) + parseInt(item.Transfer)}thousandSeparator={true}displayType={\"text\"}/></b></td>\r\n                            \r\n                            \r\n                        </tr> \r\n                    </>\r\n                )\r\n               \r\n            })\r\n            \r\n        }\r\n          \r\n    }\r\n\r\n   \r\n    renderOtherSales=(data)=>{\r\n       \r\n        if(data){\r\n           \r\n            return data.map((item)=>{\r\n               \r\n                \r\n                return(\r\n                    <>\r\n                        <tr key= {item._id}>\r\n                            \r\n                            \r\n                            <td className=\"table-light table-striped adjust2 alignTet\">{item.description}</td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.POS}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.Cash}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.Room}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><NumberFormat value={item.Transfer}thousandSeparator={true}displayType={\"text\"}/></td>\r\n                            <td className=\"table-light table-striped adjust2 alignTet2\"><b><NumberFormat value={parseInt(item.POS) + parseInt(item.Cash) + parseInt(item.Room) + parseInt(item.Transfer)}thousandSeparator={true}displayType={\"text\"}/></b></td>\r\n                            \r\n                        </tr> \r\n                    </>\r\n                )\r\n               \r\n            })\r\n            \r\n        }\r\n        \r\n           \r\n    }\r\n\r\n   \r\n\r\n    render() {\r\n        console.log (\">>> Inside Cashdetails\", this.state)\r\n        \r\n        if(localStorage.getItem('rtk')==null||localStorage.getItem('userdata')===null){\r\n            return(\r\n                <>\r\n                    <Adlogin/>\r\n                </>\r\n            )\r\n\r\n        }\r\n\r\n        return (\r\n            <>\r\n                <Newheader/>\r\n                <div className =\"mobilevi\">\r\n                    <div className='container'>\r\n                        <div>\r\n                            <center>\r\n                                <h6>{this.state.Hotelname}</h6>\r\n                                <p className=\"textSize\">{this.state.Hoteladdress}</p>\r\n                                <p className=\"textSize\">{this.state.Hotelphone}</p>\r\n\r\n                            </center>\r\n                        </div>\r\n                        <center>\r\n                            <h5>Daily Sales Report</h5><br/>\r\n                            <div>\r\n                                <span>\r\n                                    <label>\r\n                                        {this.renderDate(this.state.startdate)}\r\n                                    </label>\r\n                                </span>\r\n                            \r\n                                <span>\r\n                                    \r\n                                    <button className=\"btn btn-primary space btnadjuster printing\" onClick={ () => {this.cleanupfirst();this.findSalesReport()}}>Find</button>\r\n                                    \r\n                                </span>\r\n                            </div>\r\n                                        \r\n                        </center>\r\n                        \r\n                        <table className=\"table table-hover\">\r\n                            \r\n                            <thead className=\"table-warning\">\r\n                                <tr>\r\n                                    \r\n                                    <th className=\"adjust50\">Desc.</th>\r\n                                    <th className=\"adjust50\">POS</th>\r\n                                    <th className=\"adjust50\">Cash</th>\r\n                                    <th className=\"adjust50\">Room</th>\r\n                                    <th className=\"adjust50\">Transfer</th>\r\n                                    <th className=\"adjust50\">Total</th>\r\n                                    \r\n                                            \r\n                                </tr>\r\n                            </thead>\r\n                            <tbody className=\"table table-hover\">\r\n                                {this.renderRoomSales(this.state.RoomDeposits)}\r\n                                {this.renderRestSales(this.state.RestSales)}\r\n                                {this.renderBarSales(this.state.BarSales)}\r\n                                {this.renderOtherSales(this.state.otherSales)}\r\n                                <tr>\r\n                                    \r\n                                    <td className=\"table-light table-striped adjust2\"><b>Total</b></td>\r\n                                    <td className=\"table-light table-striped adjust2 alignTet2\"><b><NumberFormat value={parseInt(this.state.depPOS) + parseInt(this.state.restPOS) + parseInt(this.state.barPOS) + parseInt(this.state.otherPOS)}thousandSeparator={true}displayType={\"text\"}/></b></td>\r\n                                    <td className=\"table-light table-striped adjust2 alignTet2\"><b><NumberFormat value={parseInt(this.state.depCash) + parseInt(this.state.restCash) + parseInt(this.state.barCash) + parseInt(this.state.otherCash)}thousandSeparator={true}displayType={\"text\"}/></b></td>\r\n                                    <td className=\"table-light table-striped adjust2 alignTet2\"><b><NumberFormat value={parseInt(this.state.depRoom) + parseInt(this.state.restRoom) + parseInt(this.state.barRoom) + parseInt(this.state.otherRoom)}thousandSeparator={true}displayType={\"text\"}/></b></td>\r\n                                    <td className=\"table-light table-striped adjust2 alignTet2\"><b><NumberFormat value={parseInt(this.state.depTransfer) + parseInt(this.state.restTransfer) + parseInt(this.state.barTransfer) + parseInt(this.state.otherTransfer)}thousandSeparator={true}displayType={\"text\"}/></b></td>\r\n                                    <td className=\"table-light table-striped adjust2 alignTet2\"><b><NumberFormat value={parseInt(this.state.RoomTotal) + parseInt(this.state.BarTotal) + parseInt(this.state.RestTotal) + parseInt(this.state.othersTotal)}thousandSeparator={true}displayType={\"text\"}/></b></td>\r\n                                </tr>\r\n                                \r\n                            </tbody>\r\n                        </table>\r\n                        \r\n                        \r\n                        <h6>Total Collection:         <NumberFormat value={parseInt(this.state.RoomTotal) + parseInt(this.state.BarTotal) + parseInt(this.state.RestTotal) + parseInt(this.state.othersTotal)}thousandSeparator={true}displayType={\"text\"}prefix={\"NGN\"}/></h6>\r\n                        <hr/>\r\n                        <center>\r\n                        \r\n                            <button className=\"btn btn-danger movebtn printing\" onClick={ () => this.props.history.push('/') }>Close</button>\r\n                            <button className=\"btn btn-primary movebtn printing\" onClick={ () => window.print() }>Print</button>\r\n                                \r\n                        </center>  \r\n\r\n                    </div>\r\n                         \r\n                </div>\r\n            </>\r\n            \r\n            \r\n        );\r\n    }\r\n  \r\n    componentDidMount() {\r\n        console.log(\">>> Inside CashDidMount\", this.state)\r\n        var defaultDate = moment(new Date()).format('MMM DD YYYY')\r\n        \r\n        this.setState({\r\n            depRoom:'',\r\n            depTransfer:'',\r\n            depCash:'',\r\n            depPOS:'',\r\n            RoomTotal:''\r\n\r\n        })\r\n        fetch(`${getAllDeposits}&&today=${defaultDate}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            this.setState({RoomDeposits:data});\r\n            \r\n                data.map((item) => {\r\n\r\n                    \r\n                    var allPOS = data.map(item => item).reduce((totals, item) =>{\r\n                        return totals + parseInt(item.POS)\r\n                    }, 0);\r\n                    this.setState({depPOS:allPOS});\r\n    \r\n                    var allCash = data.map(item => item).reduce((totals, item) =>{\r\n                        return totals + parseInt(item.Cash)\r\n                    }, 0);\r\n                    this.setState({depCash:allCash});\r\n    \r\n                    var allTransfer = data.map(item => item).reduce((totals, item) =>{\r\n                        return totals + parseInt(item.Transfer)\r\n                    }, 0);\r\n                    this.setState({depTransfer:allTransfer});\r\n    \r\n                    var allRoom = data.map(item => item).reduce((totals, item) =>{\r\n                        return totals + parseInt(item.Room)\r\n                    }, 0);\r\n                    this.setState({depRoom:allRoom});\r\n                    \r\n                    this.myTimer = setTimeout(() =>{\r\n                        var RmSales = 0;\r\n                        var roomSales = RmSales + parseInt(this.state.depCash) + parseInt(this.state.depPOS) + parseInt(this.state.depTransfer) + parseInt(this.state.depRoom)\r\n                        this.setState({RoomTotal:roomSales});\r\n                    \r\n                    },2000)\r\n                    \r\n                    return 'ok'\r\n                })\r\n            \r\n            if((data).lenght===0){\r\n                alert('No Data Found')\r\n                this.setState({\r\n                    depRoom:'',\r\n                    depTransfer:'',\r\n                    depCash:'',\r\n                    depPOS:'',\r\n                    RoomTotal:''\r\n\r\n                })\r\n            }\r\n            \r\n            \r\n            \r\n        });\r\n                \r\n       \r\n        fetch(`${getAllRest}&&resttoday=${defaultDate}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n        this.setState({RestSales:data});\r\n        \r\n            data.map((item) => {\r\n              \r\n                var restallPOS = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.POS)\r\n                }, 0);\r\n                this.setState({restPOS:restallPOS});\r\n\r\n                var restallCash = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.Cash)\r\n                }, 0);\r\n                this.setState({restCash:restallCash});\r\n\r\n                var restallTransfer = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.Transfer)\r\n                }, 0);\r\n                this.setState({restTransfer:restallTransfer});\r\n\r\n                var restallRoom = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.Room)\r\n                }, 0);\r\n                this.setState({restRoom:restallRoom});\r\n\r\n                this.myTimer = setTimeout(() => {\r\n                    var AllRest = 0;\r\n                    var restSales = AllRest + parseInt(this.state.restCash) + parseInt(this.state.restPOS) + parseInt(this.state.restTransfer) + parseInt(this.state.restRoom)\r\n                    this.setState({RestTotal:restSales})\r\n                },2000)\r\n                \r\n                \r\n                return 'ok'\r\n            })\r\n        \r\n            if((data).lenght===0){\r\n                alert('No Data Found')\r\n                this.setState({\r\n                    restRoom:'',\r\n                    restTransfer:'',\r\n                    restCash:'',\r\n                    restPOS:'',\r\n                    RestTotal:''\r\n\r\n                })\r\n            }\r\n        \r\n        });\r\n\r\n        fetch(`${getAllbar}&&bartoday=${defaultDate}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n        this.setState({BarSales:data});\r\n        \r\n            data.map((item) => {\r\n\r\n                var barallPOS = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.POS)\r\n                }, 0);\r\n                this.setState({barPOS:barallPOS});\r\n\r\n                var barallCash = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.Cash)\r\n                }, 0);\r\n                this.setState({barCash:barallCash});\r\n\r\n                var barallTransfer = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.Transfer)\r\n                }, 0);\r\n                this.setState({barTransfer:barallTransfer});\r\n\r\n                var barallRoom = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.Room)\r\n                }, 0);\r\n                this.setState({barRoom:barallRoom});\r\n\r\n                this.myTimer = setTimeout(() => {\r\n                    var BarTotal = 0;\r\n                    var barSales = BarTotal + parseInt(this.state.barCash) + parseInt(this.state.barPOS) + parseInt(this.state.barTransfer) + parseInt(this.state.barRoom)\r\n                    this.setState({BarTotal:barSales})\r\n\r\n                },2000)\r\n                                    \r\n                return 'ok'\r\n            })\r\n        \r\n            if((data).lenght===0){\r\n                alert('No Data Found')\r\n                this.setState({\r\n                    barRoom:'',\r\n                    barTransfer:'',\r\n                    barCash:'',\r\n                    barPOS:'',\r\n                    BarTotal:''\r\n\r\n                })\r\n            }\r\n        \r\n        });\r\n        \r\n\r\n        fetch(`${getAllOther}&&othertoday=${defaultDate}`, {method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n        this.setState({otherSales:data});\r\n        \r\n            data.map((item) => {\r\n\r\n                var othersallPOS = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.POS)\r\n                }, 0);\r\n                this.setState({otherPOS:othersallPOS});\r\n\r\n                var othersallCash = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.Cash)\r\n                }, 0);\r\n                this.setState({otherCash:othersallCash});\r\n\r\n                var othersallTransfer = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.Transfer)\r\n                }, 0);\r\n                this.setState({otherTransfer:othersallTransfer});\r\n\r\n                var othersallRoom = data.map(item => item).reduce((totals, item) =>{\r\n                    return totals + parseInt(item.Room)\r\n                }, 0);\r\n                this.setState({otherRoom:othersallRoom});\r\n\r\n                this.myTimer = setTimeout(() => {\r\n                    var AllOthers = 0;\r\n                    var OtherSales = AllOthers + parseInt(this.state.otherCash) + parseInt(this.state.otherPOS) + parseInt(this.state.otherTransfer) + parseInt(this.state.otherRoom)\r\n                    this.setState({othersTotal:OtherSales})\r\n                \r\n                },2000)\r\n                \r\n                return 'ok'\r\n            })\r\n        \r\n            if((data).lenght===0){\r\n                alert('No Data Found')\r\n                this.setState({\r\n                    otherRoom:'',\r\n                    otherTransfer:'',\r\n                    otherCash:'',\r\n                    otherPOS:'',\r\n                    othersTotal:''\r\n\r\n                })\r\n            }\r\n            \r\n        });\r\n\r\n       \r\n    }\r\n\r\n}\r\n\r\n\r\nexport default CashCollection;","import React,{Component} from 'react';\r\nimport './Reception.css';\r\nimport axios from 'axios';\r\nimport Newheader from './Newheader';\r\nimport Spinner from 'react-bootstrap/Spinner';\r\nimport Adlogin from './Adlogin';\r\n\r\nconst roomchartUrl = \"http://us3.localto.net:39344/getrmstatus\";\r\nconst checkinguestUrl = \"http://us3.localto.net:39344/checkin?guest=\";\r\n\r\n\r\n\r\nclass RoomChart extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        console.log(\">>>Inside RMConstructor\")\r\n\r\n        this.state={\r\n            roomchart:'',\r\n            guestrecord:'',\r\n           \r\n\r\n        }\r\n\r\n    }\r\n\r\n    // logout(){\r\n    //     localStorage.removeItem('userInfo');\r\n    //     this.setState({\r\n    //         login:true\r\n    //     })\r\n        \r\n    // }\r\n\r\n    renderRoomchart=((data)=>{\r\n        \r\n        if (data){\r\n            return data.map((item) =>{\r\n                data.sort((a, b) => a.roomNumbers - b.roomNumbers);\r\n                if(item.fname||item.lname||item.roomStatus===\"black\"||item.roomStatus!=='green'){\r\n                    return(\r\n                        <>\r\n                            \r\n                                \r\n                            <div className=\"card alignroomsgreen\" style={{backgroundColor:`${item.roomStatus}`}}>\r\n                                <div className=\"card-body top\">\r\n                                    <b className=\"card-title\">{item.roomNumbers}</b>\r\n                                    <h6 className=\"card-subtitle mb-2 sizel2\">{item.fname} {item.lname}</h6>\r\n                                    <h6 className=\"card-subtitle mb-2 sizel\">{item.roomtypeName}</h6>\r\n                                </div>\r\n                            </div>\r\n                                    \r\n                           \r\n                        </>\r\n                    )\r\n                    \r\n                }\r\n\r\n                \r\n                else{\r\n                    return(\r\n                        <>\r\n                            \r\n                               \r\n                            <div className=\"card alignroomsgreen\" style={{backgroundColor:`${item.roomStatus}`}}>\r\n                                <div className=\"card-body top\">\r\n                                    <b className=\"card-title\">{item.roomNumbers}</b>\r\n                                    <h6 className=\"card-subtitle mb-2 sizel2\">{item.fname} {item.lname}</h6>\r\n                                    <h6 className=\"card-subtitle sizel\">{item.roomtypeName}</h6>\r\n                                </div>\r\n                            </div>\r\n                                   \r\n                           \r\n                        </>\r\n                    )\r\n                }\r\n                \r\n                   \r\n            })\r\n        }\r\n        else{\r\n            return(\r\n                <>\r\n                    <Spinner animation=\"border\" variant=\"primary\" />\r\n                    <Spinner animation=\"border\" variant=\"danger\" />\r\n                    <Spinner animation=\"border\" variant=\"warning\" />\r\n                </>\r\n            )\r\n        }\r\n        \r\n    }) \r\n    \r\n\r\n    render(){\r\n        console.log(\">>> Inside RMrender\", this.state)\r\n        \r\n        if(localStorage.getItem('rtk')==null||localStorage.getItem('userdata')===null){\r\n            return(\r\n                <>\r\n                    <Adlogin/>\r\n                </>\r\n            )\r\n\r\n        }\r\n        \r\n        return(\r\n            <>\r\n                <Newheader/>\r\n                \r\n                <div className=\"pagebody12\">\r\n                    <br/>\r\n                    {this.renderRoomchart(this.state.roomchart)}\r\n                </div>\r\n\r\n                \r\n                \r\n                <center>\r\n                    <div className=\"pagebody2\">\r\n                        <div className=\"space\">\r\n                            \r\n                            <button className=\"btn btn-danger gap6\" onClick={ () => this.props.history.push('/')}>Close</button>\r\n                        </div>\r\n                    </div>\r\n                    \r\n                \r\n                </center>\r\n                \r\n                \r\n                \r\n               \r\n                \r\n            </>\r\n        )\r\n        \r\n        \r\n    }\r\n\r\n    async componentDidMount(){\r\n        \r\n        console.log (\">>> Inside RMdidMount\")\r\n        const response = await axios.get(`${roomchartUrl}`)\r\n        const resp = await axios.get(`${checkinguestUrl}`)\r\n        this.setState({roomchart:response.data, guestrecord:resp.data})\r\n      \r\n        this.myTimer = setInterval(() => {\r\n            console.log (\">>> Inside RMdidMount\")\r\n            \r\n            fetch(`${roomchartUrl}`, {method:'GET'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                this.setState({roomchart:data});\r\n                \r\n            })\r\n\r\n            fetch(`${checkinguestUrl}`, {method:'GET'})\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                this.setState({guestrecord:data});\r\n                \r\n            })\r\n\r\n        },300000);\r\n\r\n    }\r\n\r\n\r\n}\r\nexport default RoomChart;","import React from 'react';\r\nimport {BrowserRouter, Route} from 'react-router-dom';\r\nimport NewDashboard from './Admin/NewDashboard';\r\nimport CheckInReport from './CheckInReport';\r\nimport Reservation from './Reservation';\r\nimport CashCollection from './CashCollection';\r\nimport RoomChart from './RoomChart';\r\nimport Adlogin from './Adlogin';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst Routing = () => {\r\n    return(\r\n        <BrowserRouter>\r\n            \r\n            <Route exact path=\"/\" component={NewDashboard}/>\r\n           <Route exact path=\"/AdLogin\" component={Adlogin}/>\r\n            <Route exact path=\"/Occupancy\" component={CheckInReport}/>\r\n            <Route exact path=\"/Reservation\" component={Reservation}/>\r\n            <Route exact path=\"/SalesReport\" component={CashCollection}/>\r\n            <Route exact path=\"/RoomChart\" component={RoomChart}/>\r\n            \r\n            \r\n        </BrowserRouter>\r\n    )\r\n}\r\n\r\nexport default Routing;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Routing from './Component/Routing';\r\nReactDOM.render(<Routing/>,document.getElementById('root'))"],"sourceRoot":""}